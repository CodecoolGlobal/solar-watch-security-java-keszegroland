services:
  postgres:
    image: postgres
    restart: always
    container_name: solarwatch_db_container
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: solarwatch_backend_container
    depends_on:
      - postgres
    environment:
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
      - SPRING_JPA_SHOW_SQL=${SPRING_JPA_SHOW_SQL}
      - CODECOOL_APP_JWTSECRET=${CODECOOL_APP_JWTSECRET}
      - CODECOOL_APP_JWTEXPIRATIONMS=${CODECOOL_APP_JWTEXPIRATIONMS}
      - API_KEY=${API_KEY}
      - GEO_API_URL=${GEO_API_URL}
      - SUN_API_URL=${SUN_API_URL}

  frontend: 
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: solarwatch_frontend_container
    depends_on:
      - backend
    ports:
      - "5173:3111"

volumes:
  postgres_data: